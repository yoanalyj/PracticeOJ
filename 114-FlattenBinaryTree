/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
//先序遍历
class Solution {
public:
    void flatten(TreeNode* root) {
        process(root);
        return;
    }
    TreeNode* process(TreeNode* root) {
        if (!root) return NULL;
        if (!root->left && !root->right) return root;
        TreeNode* l1 = process(root->left);
        TreeNode* l2 = process(root->right);
        if (!l2) {
            root->right = root->left;
            root->left = NULL;
            return l1;
        } else if (!l1 && !l2) {
            TreeNode* tmp = root->right;
            root->right = root->left;
            l1->right = tmp;
            root->left = NULL;
            return l2;
        } else {
            return l2;
        }
    }
};
