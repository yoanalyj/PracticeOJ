/*Given an input string, reverse the string word by word.

For example,
Given s = "the sky is blue",
return "blue is sky the".

Update (2015-02-12):
For C programmers: Try to solve it in-place in O(1) space.

click to show clarification.

Clarification:
What constitutes a word?
A sequence of non-space characters constitutes a word.
Could the input string contain leading or trailing spaces?
Yes. However, your reversed string should not contain leading or trailing spaces.
How about multiple spaces between two words?
Reduce them to a single space in the reversed string.
*/
//要求空间复杂度为o(1),故不能单独再开辟一个相同大小的字符串.
//先将整个字符串反转.然后再划分成局域,局域进行反转.所有reverse(外部是反转,内部有序)的题都可以这样做.
//思路2:空间复杂度为o(n),开辟一个栈,栈的元素类型为string,从头遍历,把每个单词放进去.最后再把各个单词出栈.
class Solution {
public:
    void reverseWords(string &s) {
        int i = 0, j = 0;
        while(s.size() >0 && s[0] == ' ') {
           s.erase(0,1);
        }
        while(s.size() >0 && s[s.size()-1] == ' ') {
           s.erase(s.size()-1,1);
        }
        if (!s.size()) return;
        if (s.size() == 1) return;
        int n = s.size();
        reverse(s, 0, n-1);
        for (j = 0; j < n; j++) {
            if(s[j] == ' ') {
                reverse(s, i, j-1);
                while(s[j+1] == ' ') {
                    s.erase(j+1, 1);
                    n = s.size();
                }
                i = j+1;
            }
        }
        reverse(s, i, j-1);
    }
    void reverse(string &s, int i, int j) {
        for (int t = i; t < (i+(j-i+1)/2); t++) {
            swap(s[t], s[j-t+i]);
        }
    }
};
//s[i]是字符,'a',不是"a".字符是可以转化为int的,但是字符串不能.
//string.push_back(c),string.insert(pos, c),和vector一样.但是string只有erase,没有pop_back().而且,map.insert(),set.insert()不需要给出位置.
//string.erase三种用法
//s.erase(pos,n); 删除从pos开始的n个字符，比如erase(0,1)就是删除第一个字符
//s.erase(position);删除position处的一个字符(position是个string类型的迭代器)
//s.erase(first,last);删除从first到last之间的字符（first和last都是迭代器）,last指向要删除的下一个元素.
//vector.erase(position),vector.erase(first,last)
//reverse是自带的函数,可以用来vector和string的翻转.reverse(s.begin(), s.end()),第二个参数指向要删除的下一个元素.
