class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        pair<int, int> s1, s2;
        s1 = make_pair(0, 0);
        s2 = make_pair(0, 0);
        int n = nums.size();
        vector<int> res;
        if (nums.empty()) return res;
        if (n == 1) {
            res.push_back(nums[0]);
            return res;
        }
        if (n == 2) {
            res.push_back(nums[0]);
            if (nums[1] != nums[0]) res.push_back(nums[1]);
            return res;
        }
        for(int i = 0; i < n; i++) {
            if (!s1.second && !s2.second) {
                s1.first = nums[i];
                s1.second = 1;
            } else if (s1.second && s2.second) {
                if (nums[i] != s1.first && nums[i] != s2.first) {
                    s1.second--;
                    s2.second--;
                } else if (nums[i] == s1.first) {
                    s1.second ++;
                } else if (nums[i] == s2.first) {
                    s2.second ++;
                }
            } else if (s1.second) {
                if (nums[i] == s1.first) {
                    s1.second ++;
                } else {
                    s2.first = nums[i];
                    s2.second = 1;
                    //s1.second;
                }
            } else {
                if (nums[i] == s2.first) {
                    s2.second += 2;
                } else {
                    s1.first = nums[i];
                    s1.second = 1;
                    //s2.second --;
                }
            }
        }
        //关键，要重新统计一下次数。因为（1，1,2,3）最后剩下1，和这种情况（1,2，3,4）剩下的4都会存在。所有要把次数清0，统计一下。
        s1.second = 0;s2.second = 0;
        for (int i = 0; i < n; i++) {
            if (s1.first == nums[i]) s1.second++;
            else if(s2.first == nums[i]) s2.second++;
        }
        if (s1.second > n/3) res.push_back(s1.first);
        if (s2.second > n/3) res.push_back(s2.first);
        return res;
    }
};
