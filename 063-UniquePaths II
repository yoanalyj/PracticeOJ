Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
The total number of unique paths is 2.

class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int M = obstacleGrid.size(), N = obstacleGrid[0].size();
        if (!M) return 0;
        int res[M][N];
        res[0][0] = (obstacleGrid[0][0])?(0):(1);
        for (int i = 1; i < M; i++)
            res[i][0] = (obstacleGrid[i][0])?(0):(res[i-1][0]);
        for (int j = 1; j < N; j++)
            res[0][j] = (obstacleGrid[0][j])?(0):(res[0][j-1]);
        for (int i = 1; i < M; i++)
            for (int j = 1; j < N; j++)
                res[i][j] = (obstacleGrid[i][j])?(0):(res[i-1][j]+res[i][j-1]);
        return res[M-1][N-1];
    }
};
