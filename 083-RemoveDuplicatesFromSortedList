/*
Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
//记得delete释放空间
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if (!head) return head;
        ListNode h(0);
        ListNode* pre = &h, *pos = head;
        h.next = head;
        while (pos->next) {
            if (pos->val == pos->next->val) {
                ListNode* tmp = pos;
                pre->next = pos->next;
                pos = pos->next;
                delete tmp;
            } else {
                pos = pos->next;
                pre = pre->next;
            }
        }
        return h.next;
    }
};
