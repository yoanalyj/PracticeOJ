/*
Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array nums = [1,1,1,2,2,3],

Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. 
It doesn't matter what you leave beyond the new length.
*/
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if (nums.empty()) return 0;
        int key = nums[0], i = 1, flag = 1;
        while (i < nums.size()) {
            if (nums[i] != key) {
                key = nums[i];
                flag = 1;
                i++;
            } else {
                if (flag == 1) {
                    flag = 2;
                    i++;
                } else {
                    nums.erase(nums.begin()+i);
                }
            }
        }
        return nums.size();
    }
};

//如果用c写,没有vector,用覆盖的方法.
class Solution {
public:
    int removeDuplicates(int A[], int n) {
        if (n <= 2) return n;
        int j = 2;
        for (int i = 2; i < n; ++i)
            if (A[i] != A[j-2])
                A[j++] = A[i];
        return j;
    }
};
