/*
Given numRows, generate the first numRows of Pascal's triangle.

For example, given numRows = 5,
Return

[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]
*/
//杨辉三角形,每个值都等于上边两个之和.
//将该三角形的左边对齐，就能够发现，tri[i][j] = tri[i-1][j-1] + tri[i-1][j]。
//v.resize(4),就是给它分配空间了.可以直接用v[3].但是v.reserve(4)只是预留,并没有分配,不能用v[3].
//vector v(4),表示定义的时候就分配了空间了.
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> res;
        if (numRows <= 0) return res;
        res.resize(numRows);
        res[0].push_back(1);
        for (int i = 1; i < numRows; i++) {
            res[i].push_back(1);
            for (int j = 1; j < i; j++) {
                res[i].push_back(res[i-1][j] + res[i-1][j-1]);
            }
            res[i].push_back(1);   
        }
        return res;
    }
};
