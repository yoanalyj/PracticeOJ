/*
Given a non-negative number represented as an array of digits, plus one to the number.

The digits are stored such that the most significant digit is at the head of the list.
*/
class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        if (digits.empty()) return vector<int>();
        int n = digits.size();
        int i = n-2;
        int tmp = (digits[n-1] + 1 )%10, res = (digits[n-1]+1)/10;
        digits[n-1] = tmp;
        while(i >= 0 && res) {
            tmp = (digits[i] + res)%10;
            res = (digits[i] + res)/10;
            digits[i] = tmp;
            i--;
        }
        if (i < 0) {
            if (res)
                digits.insert(digits.begin(), res);
        } 
        return digits;
    }
};
//vector.insert(pos,val),插入之后,val的pos就是该pos.
